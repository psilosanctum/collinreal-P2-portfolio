[
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/c2cypher/codebase/msda/msda-grad-school/collinreal-P2-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 Religion              0             1   7  12     0        6          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate   mean     sd   p0  p25  p50  p75  p100\n1 Height                0             1  166.    16.0  133  156  166  178   183\n2 Weight                0             1   70.1   21.2   45   55   70   80   110\n3 Investments           0             1 6511.  3035.  2600 4200 6600 9000 11000\n  hist \n1 ▂▁▃▃▇\n2 ▇▂▃▂▂\n3 ▇▂▅▂▅\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible.\n\n# Create a boxplot with the new categorical variable on the x-axis and height on the y-axis\np_boxplot&lt;-ggplot(mydata, aes(x = Religion, y = Height)) +\n  geom_boxplot() +\n  labs(title = \"Boxplot of Height by Religion\",\n       x = \"Religion\",\n       y = \"Height\")\n# Save the boxplot to a file\nggsave(\"boxplot.png\", plot = p_boxplot)\n\nSaving 7 x 5 in image\n\n# Create a scatterplot with weight on the x-axis and the new numerical variable on the y-axis\np_scatterplot&lt;-ggplot(mydata, aes(x = Weight, y = Investments)) +\n  geom_point() +\n  labs(title = \"Scatterplot of Weight and Investments\",\n       x = \"Weight\",\n       y = \"Investments\")\n# Save the scatterplot to a file\nggsave(\"scatterplot.png\", plot = p_scatterplot)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Analysis Portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!\n\nFeel free to change this text any way you want 😁!"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Placeholder file for the future R coding exercise."
  },
  {
    "objectID": "assignments/market_segmentation/pca_kmeans_market_segmentation.html",
    "href": "assignments/market_segmentation/pca_kmeans_market_segmentation.html",
    "title": "Market Segmentation - PCA & K-Means Clustering",
    "section": "",
    "text": "Import Libraries\n\nimport os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy\nfrom sklearn.preprocessing import StandardScaler\nfrom scipy.cluster.hierarchy import dendrogram, linkage\nfrom sklearn.cluster import KMeans\npd.set_option('display.max_columns', None)\n\nsns.set()\n\n\n\nImport Data\n\ndf_customers = pd.read_csv('customers.csv')\ndf_customers\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\n\n\n\n\n0\n100000001\n0\n0\n67\n2\n124670\n1\n2\n\n\n1\n100000002\n1\n1\n22\n1\n150773\n1\n2\n\n\n2\n100000003\n0\n0\n49\n1\n89210\n0\n0\n\n\n3\n100000004\n0\n0\n45\n1\n171565\n1\n1\n\n\n4\n100000005\n0\n0\n53\n1\n149031\n1\n1\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1995\n100001996\n1\n0\n47\n1\n123525\n0\n0\n\n\n1996\n100001997\n1\n1\n27\n1\n117744\n1\n0\n\n\n1997\n100001998\n0\n0\n31\n0\n86400\n0\n0\n\n\n1998\n100001999\n1\n1\n24\n1\n97968\n0\n0\n\n\n1999\n100002000\n0\n0\n25\n0\n68416\n0\n0\n\n\n\n\n2000 rows × 8 columns\n\n\n\n\n\nDescriptive Statistics\n\ndf_customers.describe()\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\n\n\n\n\ncount\n2.000000e+03\n2000.000000\n2000.000000\n2000.000000\n2000.00000\n2000.000000\n2000.000000\n2000.000000\n\n\nmean\n1.000010e+08\n0.457000\n0.496500\n35.909000\n1.03800\n120954.419000\n0.810500\n0.739000\n\n\nstd\n5.774946e+02\n0.498272\n0.500113\n11.719402\n0.59978\n38108.824679\n0.638587\n0.812533\n\n\nmin\n1.000000e+08\n0.000000\n0.000000\n18.000000\n0.00000\n35832.000000\n0.000000\n0.000000\n\n\n25%\n1.000005e+08\n0.000000\n0.000000\n27.000000\n1.00000\n97663.250000\n0.000000\n0.000000\n\n\n50%\n1.000010e+08\n0.000000\n0.000000\n33.000000\n1.00000\n115548.500000\n1.000000\n1.000000\n\n\n75%\n1.000015e+08\n1.000000\n1.000000\n42.000000\n1.00000\n138072.250000\n1.000000\n1.000000\n\n\nmax\n1.000020e+08\n1.000000\n1.000000\n76.000000\n3.00000\n309364.000000\n2.000000\n2.000000\n\n\n\n\n\n\n\n\n\nVariable correlation\n\ndf_customers.corr()\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\n\n\n\n\nID\n1.000000\n0.328262\n0.074403\n-0.085246\n0.012543\n-0.303217\n-0.291958\n-0.378445\n\n\nSex\n0.328262\n1.000000\n0.566511\n-0.182885\n0.244838\n-0.195146\n-0.202491\n-0.300803\n\n\nMarital status\n0.074403\n0.566511\n1.000000\n-0.213178\n0.374017\n-0.073528\n-0.029490\n-0.097041\n\n\nAge\n-0.085246\n-0.182885\n-0.213178\n1.000000\n0.654605\n0.340610\n0.108388\n0.119751\n\n\nEducation\n0.012543\n0.244838\n0.374017\n0.654605\n1.000000\n0.233459\n0.064524\n0.034732\n\n\nIncome\n-0.303217\n-0.195146\n-0.073528\n0.340610\n0.233459\n1.000000\n0.680357\n0.490881\n\n\nOccupation\n-0.291958\n-0.202491\n-0.029490\n0.108388\n0.064524\n0.680357\n1.000000\n0.571795\n\n\nSettlement size\n-0.378445\n-0.300803\n-0.097041\n0.119751\n0.034732\n0.490881\n0.571795\n1.000000\n\n\n\n\n\n\n\n\n\nCorrelation - Heat Map\n\nplt.figure(figsize=(12, 9))\ns = sns.heatmap(df_customers.corr(),\n                annot=True,\n                cmap='RdBu',\n                vmin=-1,\n                vmax=1)\ns.set_xticklabels(s.get_xticklabels(), rotation=90)\nplt.title('Correlation Matrix')\nplt.show()\n\n\n\n\n\n\nScatter Plot - Age vs. Income\n\nplt.figure(figsize=(12, 9))\n# plt.scatter(df_customers.iloc[:, 2], df_customers.iloc[:, 4])\nplt.scatter(df_customers['Age'], df_customers['Income'])\nplt.xlabel('Age')\nplt.ylabel('Income')\n\nText(0, 0.5, 'Income')\n\n\n\n\n\n\n\nStandardize the DataFrame\n\nscaler = StandardScaler()\ncustomers_std = scaler.fit_transform(df_customers)\ncustomers_std\n\narray([[-1.731185  , -0.91739884, -0.99302433, ...,  0.09752361,\n         0.29682303,  1.552326  ],\n       [-1.72945295,  1.09003844,  1.00702467, ...,  0.78265438,\n         0.29682303,  1.552326  ],\n       [-1.7277209 , -0.91739884, -0.99302433, ..., -0.83320224,\n        -1.26952539, -0.90972951],\n       ...,\n       [ 1.7277209 , -0.91739884, -0.99302433, ..., -0.90695688,\n        -1.26952539, -0.90972951],\n       [ 1.72945295,  1.09003844,  1.00702467, ..., -0.60332923,\n        -1.26952539, -0.90972951],\n       [ 1.731185  , -0.91739884, -0.99302433, ..., -1.3789866 ,\n        -1.26952539, -0.90972951]])\n\n\n\n\nHierarchical Clustering\n\nh_cluster = linkage(customers_std, method='ward')\n\nplt.figure(figsize=(12, 9))\nplt.xlabel('Observations')\nplt.ylabel('Distance')\ndendrogram(h_cluster,\n           show_leaf_counts=False,\n           no_labels=True)\nplt.show()\n\n\n\n\n\n\nK-Means Clustering\n\nresults = {}\n\nfor i in range (1, 11):\n    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)\n    kmeans.fit(customers_std)\n    results[i] = kmeans.inertia_\n\nplt.figure(figsize=(12, 9))\nplt.plot(results.keys(), results.values(), marker='o', linestyle='--')\nplt.plot([0.7, 3.2], [12000, 7000], color='#FF8400')\nplt.plot([4.5, 9], [5700, 4000], color='#FF8400')\nplt.xlabel('Number of Clusters')\nplt.ylabel('Sum of squared distance')\nplt.show()\n\n\n\n\n\n\nK-Means Clustering - 4 Clusters\n\nkmeans = KMeans(n_clusters=4, init='k-means++', random_state=42)\nkmeans.fit(customers_std)\n\ndf_customers_kmeans = df_customers.copy()\ndf_customers_kmeans['Segment'] = kmeans.labels_\ndf_customers_kmeans\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\nSegment\n\n\n\n\n0\n100000001\n0\n0\n67\n2\n124670\n1\n2\n2\n\n\n1\n100000002\n1\n1\n22\n1\n150773\n1\n2\n1\n\n\n2\n100000003\n0\n0\n49\n1\n89210\n0\n0\n3\n\n\n3\n100000004\n0\n0\n45\n1\n171565\n1\n1\n0\n\n\n4\n100000005\n0\n0\n53\n1\n149031\n1\n1\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1995\n100001996\n1\n0\n47\n1\n123525\n0\n0\n3\n\n\n1996\n100001997\n1\n1\n27\n1\n117744\n1\n0\n1\n\n\n1997\n100001998\n0\n0\n31\n0\n86400\n0\n0\n3\n\n\n1998\n100001999\n1\n1\n24\n1\n97968\n0\n0\n1\n\n\n1999\n100002000\n0\n0\n25\n0\n68416\n0\n0\n3\n\n\n\n\n2000 rows × 9 columns\n\n\n\n\n\nCharacteristics of the people in each cluster\n\ndf_customers_analysis = df_customers_kmeans.groupby('Segment').mean().round(3)\ndf_customers_analysis\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\n\n\nSegment\n\n\n\n\n\n\n\n\n\n\n\n\n0\n1.000007e+08\n0.032\n0.180\n35.637\n0.738\n140135.807\n1.251\n1.389\n\n\n1\n1.000011e+08\n0.876\n0.999\n29.003\n1.068\n105597.536\n0.630\n0.418\n\n\n2\n1.000009e+08\n0.483\n0.680\n55.881\n2.130\n155931.141\n1.093\n1.078\n\n\n3\n1.000014e+08\n0.403\n0.043\n34.690\n0.742\n94407.322\n0.255\n0.060\n\n\n\n\n\n\n\n\ndf_customers_analysis['Count'] = df_customers_kmeans[['Segment', 'Sex']].groupby('Segment').count()\ndf_customers_analysis['%'] = df_customers_analysis['Count'] / df_customers_analysis['Count'].sum()\ndf_customers_analysis.rename(index={\n    0: 'well-off',\n    1: 'fewer-opportunities',\n    2: 'standard',\n    3: 'career-focused'\n}, inplace=True)\n\ndf_customers_analysis\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\nCount\n%\n\n\nSegment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwell-off\n1.000007e+08\n0.032\n0.180\n35.637\n0.738\n140135.807\n1.251\n1.389\n633\n0.3165\n\n\nfewer-opportunities\n1.000011e+08\n0.876\n0.999\n29.003\n1.068\n105597.536\n0.630\n0.418\n679\n0.3395\n\n\nstandard\n1.000009e+08\n0.483\n0.680\n55.881\n2.130\n155931.141\n1.093\n1.078\n269\n0.1345\n\n\ncareer-focused\n1.000014e+08\n0.403\n0.043\n34.690\n0.742\n94407.322\n0.255\n0.060\n419\n0.2095\n\n\n\n\n\n\n\n\nplt.figure(figsize=(8, 6))\ns = sns.barplot(data=df_customers_analysis, x=df_customers_analysis.index, y='Count', palette=['g','c','r','m'])\nplt.xlabel('Segment')\nplt.ylabel('Population')\nplt.show()\n\n/var/folders/s3/h2qfnwzs63b1k1xft79tdnfw0000gn/T/ipykernel_79522/843998559.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  s = sns.barplot(data=df_customers_analysis, x=df_customers_analysis.index, y='Count', palette=['g','c','r','m'])\n\n\n\n\n\n\n\nAssign Meaningful Labels to the segments\n\ndf_customers_kmeans['Segment'] = df_customers_kmeans['Segment'].map({\n    0: 'well-off',\n    1: 'fewer-opportunities',\n    2: 'standard',\n    3: 'career-focused'\n})\ndf_customers_kmeans\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\nSegment\n\n\n\n\n0\n100000001\n0\n0\n67\n2\n124670\n1\n2\nstandard\n\n\n1\n100000002\n1\n1\n22\n1\n150773\n1\n2\nfewer-opportunities\n\n\n2\n100000003\n0\n0\n49\n1\n89210\n0\n0\ncareer-focused\n\n\n3\n100000004\n0\n0\n45\n1\n171565\n1\n1\nwell-off\n\n\n4\n100000005\n0\n0\n53\n1\n149031\n1\n1\nwell-off\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1995\n100001996\n1\n0\n47\n1\n123525\n0\n0\ncareer-focused\n\n\n1996\n100001997\n1\n1\n27\n1\n117744\n1\n0\nfewer-opportunities\n\n\n1997\n100001998\n0\n0\n31\n0\n86400\n0\n0\ncareer-focused\n\n\n1998\n100001999\n1\n1\n24\n1\n97968\n0\n0\nfewer-opportunities\n\n\n1999\n100002000\n0\n0\n25\n0\n68416\n0\n0\ncareer-focused\n\n\n\n\n2000 rows × 9 columns\n\n\n\n\n\nVisualize the segmented customers\n\ncolors = ['g','r','c','m']\nsns.set_palette(sns.color_palette(\"pastel\"))\nplt.figure(figsize=(12, 8))\nsns.scatterplot(\n    x=df_customers_kmeans['Age'],\n    y=df_customers_kmeans['Income'],\n    hue=df_customers_kmeans['Segment'],\n    palette=colors\n)\nplt.scatter(62, 160000 , s=60000, facecolors='none', edgecolors='#FF8400' ) \nplt.title('Age vs Income in each segment')\n\nplt.show()\n\n\n\n\n\n\nEducation vs. Income\n\nplt.figure(figsize=(16, 8))\nsns.violinplot(\n    x=df_customers_kmeans['Education'],\n    y=df_customers_kmeans['Income'],\n    hue=df_customers_kmeans['Segment'],\n    palette=['g','r','c','m']\n)\nplt.title('Education vs Income in each segment')\nplt.show()\n\n\n\n\n\n\nImprove K-Means with PCA\n\nfrom sklearn.decomposition import PCA\n\npca = PCA()\npca.fit(customers_std)\n\npca.explained_variance_ratio_\n\narray([0.34103573, 0.23178599, 0.16650585, 0.09955452, 0.06169548,\n       0.04785186, 0.03407515, 0.01749541])\n\n\n\n\nPlot the cumulative sum of variability\n\nplt.figure(figsize=(12, 8))\nplt.plot(range(0, 8), pca.explained_variance_ratio_.cumsum(), marker='o', linestyle='--')\nplt.xlabel('Number of Components')\nplt.ylabel('Cumulative Explained Variance')\n\nText(0, 0.5, 'Cumulative Explained Variance')\n\n\n\n\n\n\n\nPick 3 Components from the PCA model\n\npca = PCA(n_components=3)\npca.fit(customers_std)\n\ndf_pca_components = pd.DataFrame(\n    data=pca.components_.round(4),\n    columns=df_customers.columns.values,\n    index=['component 1', 'component 2', 'component 3'])\n\ndf_pca_components\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\n\n\n\n\ncomponent 1\n-0.3454\n-0.3286\n-0.1873\n0.2703\n0.1045\n0.4838\n0.4617\n0.4543\n\n\ncomponent 2\n0.1072\n0.4213\n0.4721\n0.3553\n0.6528\n0.1763\n0.0614\n-0.0308\n\n\ncomponent 3\n0.1435\n-0.3180\n-0.4854\n0.6134\n0.2523\n-0.1236\n-0.3446\n-0.2621\n\n\n\n\n\n\n\n\n\nCorrelation Matrix of the 3 Components\n\ns = sns.heatmap(\n    df_pca_components,\n    vmin=-1,\n    vmax=1,\n    cmap='RdBu',\n    annot=True\n)\nplt.title('Correlation Matrix')\nplt.show()\n\n\n\n\n\n\nImplementing K-Means Clustering\n\npca_scores = pca.transform(customers_std)\n\nresults = {}\n\nfor i in range(1, 11):\n    kmeans_pca = KMeans(n_clusters=i, init='k-means++', random_state=42)\n    kmeans_pca.fit(pca_scores)   # pca_scores are standarzied by default\n    results[i] = kmeans_pca.inertia_\n\n\nplt.figure(figsize=(12, 8))\nplt.plot(results.keys(), results.values(), marker='o', linestyle='--')\nplt.xlabel('Number of Clusters')\nplt.ylabel('Sum of squared distance')\nplt.show()\n\n\n\n\n\n\nImplementing K-Means Clustering w/ 4 Clusters\n\nkmeans_pca = KMeans(n_clusters=4, init='k-means++', random_state=42)\nkmeans_pca.fit(pca_scores)\n\nKMeans(n_clusters=4, random_state=42)In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.  KMeans?Documentation for KMeansiFittedKMeans(n_clusters=4, random_state=42) \n\n\n\ndf_segm_pca = pd.concat([df_customers.reset_index(drop=True), pd.DataFrame(pca_scores)], axis=1)\ndf_segm_pca.columns.values[-3:] = ['component 1', 'component 2', 'component 3']\ndf_segm_pca['K-means PCA'] = kmeans_pca.labels_\ndf_segm_pca.to_csv(\"customer_segment_pca.csv\", encoding='utf-8', index=False)\ndf_segm_pca\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\ncomponent 1\ncomponent 2\ncomponent 3\nK-means PCA\n\n\n\n\n0\n100000001\n0\n0\n67\n2\n124670\n1\n2\n2.859782\n0.936676\n2.036586\n2\n\n\n1\n100000002\n1\n1\n22\n1\n150773\n1\n2\n0.944130\n0.394492\n-2.433785\n0\n\n\n2\n100000003\n0\n0\n49\n1\n89210\n0\n0\n-0.023032\n-0.881797\n1.974083\n3\n\n\n3\n100000004\n0\n0\n45\n1\n171565\n1\n1\n2.212422\n-0.563616\n0.635332\n0\n\n\n4\n100000005\n0\n0\n53\n1\n149031\n1\n1\n2.110202\n-0.425124\n1.127543\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1995\n100001996\n1\n0\n47\n1\n123525\n0\n0\n-1.485348\n0.432286\n1.615196\n3\n\n\n1996\n100001997\n1\n1\n27\n1\n117744\n1\n0\n-1.672129\n0.839600\n-0.923547\n1\n\n\n1997\n100001998\n0\n0\n31\n0\n86400\n0\n0\n-1.841798\n-2.158681\n1.116012\n3\n\n\n1998\n100001999\n1\n1\n24\n1\n97968\n0\n0\n-2.716832\n0.561390\n-0.476253\n1\n\n\n1999\n100002000\n0\n0\n25\n0\n68416\n0\n0\n-2.209795\n-2.423450\n0.860709\n3\n\n\n\n\n2000 rows × 12 columns\n\n\n\n\n\nAnalyze Segmentation Results\n\ndf_segm_pca_analysis = df_segm_pca.groupby(['K-means PCA']).mean().round(4)\ndf_segm_pca_analysis\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\ncomponent 1\ncomponent 2\ncomponent 3\n\n\nK-means PCA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n1.000007e+08\n0.0347\n0.1924\n35.4479\n0.7382\n140183.3155\n1.2539\n1.3912\n1.4667\n-0.9422\n-0.1839\n\n\n1\n1.000012e+08\n0.9190\n0.9670\n28.9580\n1.0645\n106617.4678\n0.6597\n0.4273\n-1.2052\n0.6160\n-0.8333\n\n\n2\n1.000009e+08\n0.4925\n0.6842\n55.8421\n2.1278\n157389.3872\n1.1128\n1.0977\n1.5153\n2.1581\n0.8680\n\n\n3\n1.000013e+08\n0.3418\n0.1016\n35.0462\n0.7667\n92501.5889\n0.2079\n0.0439\n-1.2220\n-0.8951\n1.0196\n\n\n\n\n\n\n\n\nSegment 0: low career and experience values with high education and lifestyle values.\nLabel: Standard\nSegment 1: high career but low education, lifestyle and experience\nLabel: Career focused\nSegment 2: low career, education and lifestyle, but high life experience\nLabel: Fewer opportunities\nSegment 3: high career, education and lifestyle as well as high life experience\nLabel: Well-off\n\n\ndf_segm_pca_analysis['Count'] = df_segm_pca[['K-means PCA', 'Sex']].groupby(['K-means PCA']).count()\ndf_segm_pca_analysis['%'] = df_segm_pca_analysis['Count'] / df_segm_pca_analysis['Count'].sum()\ndf_segm_pca_analysis.rename(index={\n    0: 'standard',\n    1: 'career-focused',\n    2: 'fewer-opportunities',\n    3: 'well-off'\n}, inplace=True)\n\ndf_segm_pca_analysis\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\ncomponent 1\ncomponent 2\ncomponent 3\nCount\n%\n\n\nK-means PCA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstandard\n1.000007e+08\n0.0347\n0.1924\n35.4479\n0.7382\n140183.3155\n1.2539\n1.3912\n1.4667\n-0.9422\n-0.1839\n634\n0.3170\n\n\ncareer-focused\n1.000012e+08\n0.9190\n0.9670\n28.9580\n1.0645\n106617.4678\n0.6597\n0.4273\n-1.2052\n0.6160\n-0.8333\n667\n0.3335\n\n\nfewer-opportunities\n1.000009e+08\n0.4925\n0.6842\n55.8421\n2.1278\n157389.3872\n1.1128\n1.0977\n1.5153\n2.1581\n0.8680\n266\n0.1330\n\n\nwell-off\n1.000013e+08\n0.3418\n0.1016\n35.0462\n0.7667\n92501.5889\n0.2079\n0.0439\n-1.2220\n-0.8951\n1.0196\n433\n0.2165\n\n\n\n\n\n\n\n\n\nNumber of Customers per Segment\n\nplt.figure(figsize=(8, 6))\ns = sns.barplot(data=df_segm_pca_analysis, x=df_segm_pca_analysis.index, y='Count', palette=['g','c','r','m'])\nplt.xlabel('Segment')\nplt.ylabel('Population')\nplt.show()\n\n/var/folders/s3/h2qfnwzs63b1k1xft79tdnfw0000gn/T/ipykernel_79522/2239997931.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  s = sns.barplot(data=df_segm_pca_analysis, x=df_segm_pca_analysis.index, y='Count', palette=['g','c','r','m'])\n\n\n\n\n\n\n\nAdd segment labels to original dataset\n\ndf_segm_pca['Segment'] = df_segm_pca['K-means PCA'].map({\n    0: 'standard',\n    1: 'career-focused',\n    2: 'fewer-opportunities',\n    3: 'well-off'\n})\ndf_segm_pca\n\n\n\n\n\n\n\n\nID\nSex\nMarital status\nAge\nEducation\nIncome\nOccupation\nSettlement size\ncomponent 1\ncomponent 2\ncomponent 3\nK-means PCA\nSegment\n\n\n\n\n0\n100000001\n0\n0\n67\n2\n124670\n1\n2\n2.859782\n0.936676\n2.036586\n2\nfewer-opportunities\n\n\n1\n100000002\n1\n1\n22\n1\n150773\n1\n2\n0.944130\n0.394492\n-2.433785\n0\nstandard\n\n\n2\n100000003\n0\n0\n49\n1\n89210\n0\n0\n-0.023032\n-0.881797\n1.974083\n3\nwell-off\n\n\n3\n100000004\n0\n0\n45\n1\n171565\n1\n1\n2.212422\n-0.563616\n0.635332\n0\nstandard\n\n\n4\n100000005\n0\n0\n53\n1\n149031\n1\n1\n2.110202\n-0.425124\n1.127543\n0\nstandard\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1995\n100001996\n1\n0\n47\n1\n123525\n0\n0\n-1.485348\n0.432286\n1.615196\n3\nwell-off\n\n\n1996\n100001997\n1\n1\n27\n1\n117744\n1\n0\n-1.672129\n0.839600\n-0.923547\n1\ncareer-focused\n\n\n1997\n100001998\n0\n0\n31\n0\n86400\n0\n0\n-1.841798\n-2.158681\n1.116012\n3\nwell-off\n\n\n1998\n100001999\n1\n1\n24\n1\n97968\n0\n0\n-2.716832\n0.561390\n-0.476253\n1\ncareer-focused\n\n\n1999\n100002000\n0\n0\n25\n0\n68416\n0\n0\n-2.209795\n-2.423450\n0.860709\n3\nwell-off\n\n\n\n\n2000 rows × 13 columns\n\n\n\n\n\nVisualize segments with respect to first two components\n\nplt.figure(figsize=(10, 8))\nsns.scatterplot(\n    x=df_segm_pca['component 2'],\n    y=df_segm_pca['component 1'],\n    hue=df_segm_pca['Segment'],\n    palette=['g','r','c','m']\n)\nplt.scatter(2.35, 2 , s=60000, facecolors='none', edgecolors='g' )\nplt.scatter(-1.2, 2 , s=60000, facecolors='none', edgecolors='y' )\nplt.scatter(-1, -1 , s=30000, facecolors='none', edgecolors='b' )\nplt.scatter(1.2, -1 , s=40000, facecolors='none', edgecolors='r' )\n\nplt.title('Component 1 vs Component 2')\nplt.show()"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About Me",
    "section": "",
    "text": "The Real Family\n\n\n\nPersonal Background\nMy name is Collin Real. I’m 27 years old, and I grew up in Saint Hedwig, Texas. My hobbies include fitness, technology, and hanging out with my friends and family. I also breed Persian cats.\n\n\nEducation/Career\nI have a Bachelor’s and Master’s Degree in Accounting, and worked as a Tax Accountant for 3-4 years. As I was finishing my accounting degrees, my friend introduced me to programming, and I instantly knew I was headed for a career change. I researched how Python could be used in accounting/finance, discovering the power of automation, building websites, and data science. To gain experience, I used YouTube, GitHub, and many other websites to learn from projects created by others. After adding this experience to my resume, I joined the Macrospace Analytics team at H-E-B in 2023 as an analyst, performing typical analyst as well as data science work. I hope to transition fully to data science work once I complete the MSDA program.\n\n\nStorytelling w/ Data"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Demographic Impact on Investments",
    "section": "",
    "text": "SRI LAKSHMIR CHUNDRU contributed to this exercise."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Demographic Impact on Investments",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nCustomer demographics, such as religion, gender, height, and weight were analyzed to identify which of these demographics had more significant influences on an individual’s investments."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Demographic Impact on Investments",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nThe two variables I added to the data sheet are Religion and Investments. The Religion variable seeks to identify the spiritual beliefs, if any, of each individual. The Investments variable represents the total fair market value of an individual’s investment accounts."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Demographic Impact on Investments",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nCan individual’s be clustered into groups based on their demographics and the fair market value of their investment accounts? If so, how do we use these clusters to gain a competitive advantage?"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Demographic Impact on Investments",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nDummy data was used for this report."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Demographic Impact on Investments",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\n\n3.2.0.1 Import libraries.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\n\n\n3.2.0.2 Import Data\n\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\nprint(rawdata)\n\n# A tibble: 14 × 5\n   Height Weight Gender Religion     Investments\n   &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;              &lt;dbl&gt;\n 1 180        80 M      Christianity       11000\n 2 175        70 O      Agnostic            5000\n 3 sixty      60 F      Islam               6500\n 4 178        76 F      Judaism             9000\n 5 192        90 NA     Atheist            12000\n 6 6          55 F      Christianity        3000\n 7 156        90 O      Buddhism            4200\n 8 166       110 M      Hinduism            6600\n 9 155        54 N      Atheist             1200\n10 145      7000 M      Agnostic            8700\n11 165        NA F      Islam              12400\n12 133        45 F      Mormonism           2600\n13 166        55 M      Mormonism           9900\n14 154        50 M      Buddhism            7300\n\n\n\n\n3.2.0.3 Check Data\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Religion        spiritual beliefs                     Christianity, Islam, Ju…\n5 Investments     fmv of investments in dollars         numeric value, or NA    \n\n\n\n\n3.2.0.4 Descriptive Statistics\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height      &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"1…\n$ Weight      &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender      &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F…\n$ Religion    &lt;chr&gt; \"Christianity\", \"Agnostic\", \"Islam\", \"Judaism\", \"Atheist\",…\n$ Investments &lt;dbl&gt; 11000, 5000, 6500, 9000, 12000, 3000, 4200, 6600, 1200, 87…\n\nsummary(rawdata)\n\n    Height              Weight          Gender            Religion        \n Length:14          Min.   :  45.0   Length:14          Length:14         \n Class :character   1st Qu.:  55.0   Class :character   Class :character  \n Mode  :character   Median :  70.0   Mode  :character   Mode  :character  \n                    Mean   : 602.7                                        \n                    3rd Qu.:  90.0                                        \n                    Max.   :7000.0                                        \n                    NA's   :1                                             \n  Investments   \n Min.   : 1200  \n 1st Qu.: 4400  \n Median : 6950  \n Mean   : 7100  \n 3rd Qu.: 9675  \n Max.   :12400  \n                \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Religion     Investments\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;              &lt;dbl&gt;\n1 180        80 M      Christianity       11000\n2 175        70 O      Agnostic            5000\n3 sixty      60 F      Islam               6500\n4 178        76 F      Judaism             9000\n5 192        90 NA     Atheist            12000\n6 6          55 F      Christianity        3000\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nReligion\n0\n1\n5\n12\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\nInvestments\n0\n1.00\n7100.00\n3580.50\n1200\n4400\n6950\n9675\n12400\n▇▅▇▇▇\n\n\n\n\n\n\n\n3.2.0.5 Data Cleaning\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)))\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nd3$Gender &lt;- as.factor(d3$Gender)\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()  \nprocesseddata &lt;- d4\nprocesseddata\n\n# A tibble: 9 × 5\n  Height Weight Gender Religion     Investments\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt;  &lt;chr&gt;              &lt;dbl&gt;\n1    180     80 M      Christianity       11000\n2    175     70 O      Agnostic            5000\n3    178     76 F      Judaism             9000\n4    183     55 F      Christianity        3000\n5    156     90 O      Buddhism            4200\n6    166    110 M      Hinduism            6600\n7    133     45 F      Mormonism           2600\n8    166     55 M      Mormonism           9900\n9    154     50 M      Buddhism            7300"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Demographic Impact on Investments",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nOne linear model was created with height as our dependent variable and weight/religion as our predictors."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Demographic Impact on Investments",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\n?@tbl-summarytable shows a summary of the data.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Demographic Impact on Investments",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Demographic Impact on Investments",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871\n\n\n\n\n\n\n\n4.3.1 Distribution of Height by Religion\n\n\n\n\n\nFigure 2: Distribution of height by religion.\n\n\n\n\n\n\n4.3.2 Correlation Between Investments and Weight\n\n\n\n\n\nFigure 3: The relationship between investments and weight.\n\n\n\n\n\n\n4.3.3 Investments/Religious Influence on Height\n\n\n\n\nTable 3: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n164.913979\n37.0650265\n4.4493150\n0.0469828\n\n\nWeight\n0.144086\n0.4760345\n0.3026798\n0.7907129\n\n\nReligionBuddhism\n-20.000000\n19.8783599\n-1.0061192\n0.4203016\n\n\nReligionChristianity\n6.860215\n19.9139524\n0.3444929\n0.7633274\n\n\nReligionHinduism\n-14.763441\n29.8234767\n-0.4950275\n0.6696182\n\n\nReligionJudaism\n2.135484\n23.1305752\n0.0923230\n0.9348565\n\n\nReligionMormonism\n-22.618280\n22.0407063\n-1.0262048\n0.4126949"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Demographic Impact on Investments",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nTwo diagnostic plots were created to visualize the data. The box plot identifies the distribution of data among the categorical variable Religion and helps identify potential outliers. Our box plots demonstrate few variation in height for all religions except Mormonism. The scatter plot illustrates the relationship between the Weight and Investments variables (i.e. their degree of correlation). The scatter plot does not show much correlation between the two variables."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Demographic Impact on Investments",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nOne major limitation is the small sample size. It’s difficult to identify patterns when a lack of data is present. Another limitation is not creating additional plots for other combinations of variables. One strength is the level of demographic data which is essential for market segmentation."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Demographic Impact on Investments",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nOne of the key takeaways from this project is the importance of data acquisition and validating it’s integrity. Small samples sizes and junk data limit the opportunity of producing valuable insights. Data is the most critical asset for predictive modeling. If the integrity of a dataset is in question, so are the results of every model built on top of it.\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/c2cypher/codebase/msda/msda-grad-school/collinreal-P2-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/c2cypher/codebase/msda/msda-grad-school/collinreal-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/c2cypher/codebase/msda/msda-grad-school/collinreal-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\nrawdata\n\n# A tibble: 14 × 5\n   Height Weight Gender Religion     Investments\n   &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;              &lt;dbl&gt;\n 1 180        80 M      Christianity       11000\n 2 175        70 O      Agnostic            5000\n 3 sixty      60 F      Islam               6500\n 4 178        76 F      Judaism             9000\n 5 192        90 NA     Atheist            12000\n 6 6          55 F      Christianity        3000\n 7 156        90 O      Buddhism            4200\n 8 166       110 M      Hinduism            6600\n 9 155        54 N      Atheist             1200\n10 145      7000 M      Agnostic            8700\n11 165        NA F      Islam              12400\n12 133        45 F      Mormonism           2600\n13 166        55 M      Mormonism           9900\n14 154        50 M      Buddhism            7300\n\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`        \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                   \n1 Height          height in centimeters                 numeric value &gt;0 or NA  \n2 Weight          weight in kilograms                   numeric value &gt;0 or NA  \n3 Gender          identified gender (male/female/other) M/F/O/NA                \n4 Religion        spiritual beliefs                     Christianity, Islam, Ju…\n5 Investments     fmv of investments in dollars         numeric value, or NA    \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height      &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"1…\n$ Weight      &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender      &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F…\n$ Religion    &lt;chr&gt; \"Christianity\", \"Agnostic\", \"Islam\", \"Judaism\", \"Atheist\",…\n$ Investments &lt;dbl&gt; 11000, 5000, 6500, 9000, 12000, 3000, 4200, 6600, 1200, 87…\n\nsummary(rawdata)\n\n    Height              Weight          Gender            Religion        \n Length:14          Min.   :  45.0   Length:14          Length:14         \n Class :character   1st Qu.:  55.0   Class :character   Class :character  \n Mode  :character   Median :  70.0   Mode  :character   Mode  :character  \n                    Mean   : 602.7                                        \n                    3rd Qu.:  90.0                                        \n                    Max.   :7000.0                                        \n                    NA's   :1                                             \n  Investments   \n Min.   : 1200  \n 1st Qu.: 4400  \n Median : 6950  \n Mean   : 7100  \n 3rd Qu.: 9675  \n Max.   :12400  \n                \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender Religion     Investments\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;              &lt;dbl&gt;\n1 180        80 M      Christianity       11000\n2 175        70 O      Agnostic            5000\n3 sixty      60 F      Islam               6500\n4 178        76 F      Judaism             9000\n5 192        90 NA     Atheist            12000\n6 6          55 F      Christianity        3000\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nReligion\n0\n1\n5\n12\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\nInvestments\n0\n1.00\n7100.00\n3580.50\n1200\n4400\n6950\n9675\n12400\n▇▅▇▇▇\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nlibrary(dplyr)\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nReligion\n0\n1\n5\n12\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nInvestments\n0\n1.00\n7146.15\n3722.37\n1200\n4200.00\n7300\n9900\n12400\n▇▅▅▇▇\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nReligion\n0\n1\n5\n12\n0\n8\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nInvestments\n0\n1.00\n7146.15\n3722.37\n1200\n4200.00\n7300\n9900\n12400\n▇▅▅▇▇\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nReligion\n0\n1\n7\n12\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nInvestments\n0\n1\n6527.27\n3633.76\n1200\n3600.0\n6600\n9450\n12000\n▇▅▅▂▇\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nReligion\n0\n1\n7\n12\n0\n7\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\nInvestments\n0\n1\n6527.27\n3633.76\n1200\n3600.0\n6600\n9450\n12000\n▇▅▅▂▇\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nReligion\n0\n1\n7\n12\n0\n6\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nInvestments\n0\n1\n6511.11\n3035.39\n2600\n4200\n6600\n9000\n11000\n▇▂▅▂▅\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\nd4\n\n# A tibble: 9 × 5\n  Height Weight Gender Religion     Investments\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;fct&gt;  &lt;chr&gt;              &lt;dbl&gt;\n1    180     80 M      Christianity       11000\n2    175     70 O      Agnostic            5000\n3    178     76 F      Judaism             9000\n4    183     55 F      Christianity        3000\n5    156     90 O      Buddhism            4200\n6    166    110 M      Hinduism            6600\n7    133     45 F      Mormonism           2600\n8    166     55 M      Mormonism           9900\n9    154     50 M      Buddhism            7300\n\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Collin Real - Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  }
]